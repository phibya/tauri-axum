use crate::api;
use axum::routing::{delete, get, post, put};
use axum::{middleware, Router};

pub fn admin_routes() -> Router {
    Router::new()
        // Admin user management routes
        .route(
            "/api/admin/users",
            get(api::user::list_users)
                .layer(middleware::from_fn(api::middleware::users_read_middleware)),
        )
        .route(
            "/api/admin/users/{user_id}",
            get(api::user::get_user)
                .layer(middleware::from_fn(api::middleware::users_read_middleware)),
        )
        .route(
            "/api/admin/users/{user_id}",
            put(api::user::update_user)
                .layer(middleware::from_fn(api::middleware::users_edit_middleware)),
        )
        .route(
            "/api/admin/users/{user_id}/toggle-active",
            post(api::user::toggle_user_active)
                .layer(middleware::from_fn(api::middleware::users_edit_middleware)),
        )
        .route(
            "/api/admin/users/reset-password",
            post(api::user::reset_user_password)
                .layer(middleware::from_fn(api::middleware::users_edit_middleware)),
        )
        .route(
            "/api/admin/users",
            post(api::user::create_user).layer(middleware::from_fn(
                api::middleware::users_create_middleware,
            )),
        )
        .route(
            "/api/admin/users/{user_id}",
            delete(api::user::delete_user).layer(middleware::from_fn(
                api::middleware::users_delete_middleware,
            )),
        )
        // Admin user group management routes
        .route(
            "/api/admin/groups",
            get(api::user_groups::list_user_groups)
                .layer(middleware::from_fn(api::middleware::groups_read_middleware)),
        )
        .route(
            "/api/admin/groups",
            post(api::user_groups::create_user_group).layer(middleware::from_fn(
                api::middleware::groups_create_middleware,
            )),
        )
        .route(
            "/api/admin/groups/{group_id}",
            get(api::user_groups::get_user_group)
                .layer(middleware::from_fn(api::middleware::groups_read_middleware)),
        )
        .route(
            "/api/admin/groups/{group_id}",
            put(api::user_groups::update_user_group)
                .layer(middleware::from_fn(api::middleware::groups_edit_middleware)),
        )
        .route(
            "/api/admin/groups/{group_id}",
            delete(api::user_groups::delete_user_group).layer(middleware::from_fn(
                api::middleware::groups_delete_middleware,
            )),
        )
        .route(
            "/api/admin/groups/{group_id}/members",
            get(api::user_groups::get_group_members)
                .layer(middleware::from_fn(api::middleware::groups_read_middleware)),
        )
        .route(
            "/api/admin/groups/assign",
            post(api::user_groups::assign_user_to_group)
                .layer(middleware::from_fn(api::middleware::groups_edit_middleware)),
        )
        .route(
            "/api/admin/groups/{user_id}/{group_id}/remove",
            delete(api::user_groups::remove_user_from_group)
                .layer(middleware::from_fn(api::middleware::groups_edit_middleware)),
        )
        // User Group Model Provider relationship routes
        .route(
            "/api/admin/groups/{group_id}/providers",
            get(api::user_groups::get_group_providers)
                .layer(middleware::from_fn(api::middleware::groups_read_middleware)),
        )
        .route(
            "/api/admin/groups/assign-model-provider",
            post(api::user_groups::assign_provider_to_group)
                .layer(middleware::from_fn(api::middleware::groups_edit_middleware)),
        )
        .route(
            "/api/admin/groups/{group_id}/providers/{provider_id}",
            delete(api::user_groups::remove_provider_from_group)
                .layer(middleware::from_fn(api::middleware::groups_edit_middleware)),
        )
        .route(
            "/api/admin/user-group-model-provider-relationships",
            get(api::user_groups::list_user_group_provider_relationships)
                .layer(middleware::from_fn(api::middleware::groups_read_middleware)),
        )
        // Admin configuration routes
        .route(
            "/api/admin/config/user-registration",
            get(api::configuration::get_user_registration_status_admin).layer(middleware::from_fn(
                api::middleware::config_user_registration_read_middleware,
            )),
        )
        .route(
            "/api/admin/config/user-registration",
            put(api::configuration::update_user_registration_status).layer(middleware::from_fn(
                api::middleware::config_user_registration_edit_middleware,
            )),
        )
        .route(
            "/api/admin/config/default-language",
            get(api::configuration::get_default_language_admin).layer(middleware::from_fn(
                api::middleware::config_appearance_read_middleware,
            )),
        )
        .route(
            "/api/admin/config/default-language",
            put(api::configuration::update_default_language).layer(middleware::from_fn(
                api::middleware::config_appearance_edit_middleware,
            )),
        )
        .route(
            "/api/admin/config/proxy",
            get(api::configuration::get_proxy_settings).layer(middleware::from_fn(
                api::middleware::config_proxy_read_middleware,
            )),
        )
        .route(
            "/api/admin/config/proxy",
            put(api::configuration::update_proxy_settings).layer(middleware::from_fn(
                api::middleware::config_proxy_edit_middleware,
            )),
        )
        .route(
            "/api/admin/config/proxy/test",
            post(api::configuration::test_proxy_connection).layer(middleware::from_fn(
                api::middleware::config_proxy_read_middleware,
            )),
        )
        // Model provider routes
        .route(
            "/api/admin/providers",
            get(api::providers::list_providers).layer(middleware::from_fn(
                api::middleware::providers_read_middleware,
            )),
        )
        .route(
            "/api/admin/providers",
            post(api::providers::create_provider).layer(middleware::from_fn(
                api::middleware::providers_create_middleware,
            )),
        )
        .route(
            "/api/admin/providers/{provider_id}",
            get(api::providers::get_provider).layer(middleware::from_fn(
                api::middleware::providers_read_middleware,
            )),
        )
        .route(
            "/api/admin/providers/{provider_id}",
            put(api::providers::update_provider).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/providers/{provider_id}",
            delete(api::providers::delete_provider).layer(middleware::from_fn(
                api::middleware::providers_delete_middleware,
            )),
        )
        .route(
            "/api/admin/providers/{provider_id}/test-proxy",
            post(api::providers::test_provider_proxy_connection).layer(middleware::from_fn(
                api::middleware::providers_read_middleware,
            )),
        )
        .route(
            "/api/admin/providers/{provider_id}/groups",
            get(api::providers::get_provider_groups).layer(middleware::from_fn(
                api::middleware::providers_read_middleware,
            )),
        )
        .route(
            "/api/admin/providers/{provider_id}/models",
            get(api::models::list_provider_models).layer(middleware::from_fn(
                api::middleware::providers_read_middleware,
            )),
        )
        .route(
            "/api/admin/devices",
            get(api::providers::get_available_devices).layer(middleware::from_fn(
                api::middleware::providers_read_middleware,
            )),
        )
        // Repository routes
        .route(
            "/api/admin/repositories",
            get(api::repositories::list_repositories).layer(middleware::from_fn(
                api::middleware::repositories_read_middleware,
            )),
        )
        .route(
            "/api/admin/repositories",
            post(api::repositories::create_repository).layer(middleware::from_fn(
                api::middleware::repositories_create_middleware,
            )),
        )
        .route(
            "/api/admin/repositories/{repository_id}",
            get(api::repositories::get_repository).layer(middleware::from_fn(
                api::middleware::repositories_read_middleware,
            )),
        )
        .route(
            "/api/admin/repositories/{repository_id}",
            put(api::repositories::update_repository).layer(middleware::from_fn(
                api::middleware::repositories_edit_middleware,
            )),
        )
        .route(
            "/api/admin/repositories/{repository_id}",
            delete(api::repositories::delete_repository).layer(middleware::from_fn(
                api::middleware::repositories_delete_middleware,
            )),
        )
        .route(
            "/api/admin/repositories/test",
            post(api::repositories::test_repository_connection).layer(middleware::from_fn(
                api::middleware::repositories_read_middleware,
            )),
        )
        // Model routes
        .route(
            "/api/admin/providers/{provider_id}/models",
            post(api::models::create_model).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/models/{model_id}",
            get(api::models::get_model).layer(middleware::from_fn(
                api::middleware::providers_read_middleware,
            )),
        )
        .route(
            "/api/admin/models/{model_id}",
            put(api::models::update_model).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/models/{model_id}",
            delete(api::models::delete_model).layer(middleware::from_fn(
                api::middleware::providers_delete_middleware,
            )),
        )
        .route(
            "/api/admin/models/{model_id}/start",
            post(api::models::start_model).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/models/{model_id}/stop",
            post(api::models::stop_model).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/models/{model_id}/enable",
            post(api::models::enable_model).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/models/{model_id}/disable",
            post(api::models::disable_model).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        // Assistant routes - Admin endpoints
        .route(
            "/api/admin/assistants",
            get(api::assistants::list_assistants_admin)
                .layer(middleware::from_fn(api::middleware::groups_read_middleware)),
        )
        .route(
            "/api/admin/assistants",
            post(api::assistants::create_template_assistant).layer(middleware::from_fn(
                api::middleware::groups_create_middleware,
            )),
        )
        .route(
            "/api/admin/assistants/{assistant_id}",
            get(api::assistants::get_assistant_admin)
                .layer(middleware::from_fn(api::middleware::groups_read_middleware)),
        )
        .route(
            "/api/admin/assistants/{assistant_id}",
            put(api::assistants::update_assistant_admin)
                .layer(middleware::from_fn(api::middleware::groups_edit_middleware)),
        )
        .route(
            "/api/admin/assistants/{assistant_id}",
            delete(api::assistants::delete_assistant_admin).layer(middleware::from_fn(
                api::middleware::groups_delete_middleware,
            )),
        )
        // Model upload routes for Candle models removed - use upload-multipart and commit-upload workflow
        .route(
            "/api/admin/uploaded-models/{model_id}/upload",
            post(api::model_uploads::upload_model_file).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/uploaded-models/upload-multipart",
            post(api::model_uploads::upload_model_file_multipart).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/uploaded-models/commit-upload",
            post(api::model_uploads::commit_uploaded_files).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/uploaded-models/{model_id}/validate",
            post(api::model_uploads::validate_model).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/uploaded-models/{model_id}/status",
            put(api::model_uploads::update_model_status).layer(middleware::from_fn(
                api::middleware::providers_edit_middleware,
            )),
        )
        .route(
            "/api/admin/uploaded-models/storage-stats",
            get(api::model_uploads::get_storage_stats).layer(middleware::from_fn(
                api::middleware::providers_read_middleware,
            )),
        )
}
